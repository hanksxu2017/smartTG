<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap SYSTEM "./mapsql.dtd">
<sqlMap>

    <!-- 这里面只支持SQL语句，不支持HQL语句的执行-->
    
    <!-- SQL语句-->
    <!-- 菜单列表树 -->
    <sqlUnit name="select_study_school_list">
        <sql>
           select t.id, t.name, t.address, t.create_time from tg_study_school t order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="select_study_teacher_list">
        <sql>
            select t.id, t.name, t.phone, t.level, t.create_time from tg_study_teacher t order by t.create_time asc
        </sql>
    </sqlUnit>
    <!-- 教师简单列表 -->
    <sqlUnit name="teacher_simp_list">
        <sql>
            select t.id, t.name, t.level from tg_study_teacher t
            [ where t.name like '%:name%']
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="classroom_list">
        <sql>
            select t.id, t.school_name, t.name, t.description, t.create_time from tg_study_classroom t
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="select_study_class_list">
        <sql>
            select t.id, t.name, t.teacher_name, t.level, t.description, t.create_time from tg_study_class t
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <!-- 学生 -->
    <sqlUnit name="student_list">
        <sql>
            select t.id, t.name, if(t.sex = 1, "男生", "女生"), t.birthday, t.school_name, t.parent_phone,
            t.level,
            CASE t.status WHEN 'NORMAL' THEN '正常'
            WHEN 'DROP_OUT' THEN '退学'
            WHEN 'TEMP_LEAVE' THEN "休学"
            ELSE '未定义' END ,
            t.remain_course, t.create_time
            from tg_study_student t
            where 1=1
            [and t.name like '%:name%']
            [and t.status =:status]
            order by t.create_time asc
        </sql>
    </sqlUnit>
    <!-- 学生简单列表 -->
    <sqlUnit name="student_simp_list">
        <sql>
            select t.id, t.name, t.level, t.remain_course, date_format(t.create_time, '%Y-%c-%d')
            from tg_study_student t
            where t.status = 'NORMAL'
            [ and t.name like '%:name%']
            order by t.create_time asc
        </sql>
    </sqlUnit>


    <!-- 课时 -->
    <sqlUnit name="select_course_list">
        <sql>
            select t.id,
            CASE t.week_info WHEN '7' THEN '星期天'
            WHEN '1' THEN '星期一'
            WHEN '2' THEN '星期二'
            WHEN '3' THEN '星期三'
            WHEN '4' THEN '星期四'
            WHEN '5' THEN '星期五'
            WHEN '6' THEN '星期六'
            ELSE '未设置' END,
            t.course_time, t.name, t.classroom_name, t.teacher_name
            from tg_study_course t
            where t.status = 'NORMAL'
            [and t.teacher_id =:teacherId]
            [and t.week_info =:weekInfo]
            order by t.week_info,t.name
        </sql>
    </sqlUnit>
    <!-- 教师的课时信息 -->
    <sqlUnit name="teacher_course_list">
        <sql>
            SELECT temp.id,
                temp.name,
                temp.week_info,
                temp.course_time,
                temp.classroom_name,
                temp.status,
                (SELECT COUNT(rel.id) AS studentCount FROM tg_study_student_course_rel rel WHERE rel.course_id = temp.id AND rel.status = 'NORMAL'),
                DATE_FORMAT(temp.create_time, '%Y-%m-%e'),
                temp.description
            FROM (
                SELECT t.id,
                    t.name,
                    CASE t.week_info WHEN '7' THEN '星期天'
                        WHEN '1' THEN '星期一'
                        WHEN '2' THEN '星期二'
                        WHEN '3' THEN '星期三'
                        WHEN '4' THEN '星期四'
                        WHEN '5' THEN '星期五'
                        WHEN '6' THEN '星期六'
                        ELSE '未设置' END AS week_info,
                    t.course_time,
                    t.classroom_name,
                    CASE t.status WHEN "NORMAL" THEN '正常'
                        ELSE '未定义' END AS STATUS,
                    t.create_time,
                    t.description
                FROM tg_study_course t
                WHERE t.teacher_id =:id
                    [and t.name like '%:courseName%']
                ORDER BY t.week_info, t.course_time_index) temp
        </sql>
    </sqlUnit>
    <sqlUnit name="teacher_course_weeks">
        <sql>
            select DISTINCT t.week_info
            from tg_study_course t
            where t.teacher_id =:teacherId
            order by t.create_time asc
        </sql>
    </sqlUnit>
    <!-- 课时的学生列表 -->
    <sqlUnit name="course_student_list">
        <sql>
            select t.id, t.name, t.level, t.remain_course, t.create_time,
            CASE rel.status WHEN 'NORMAL' THEN '正常'
            WHEN 'EXIT_COURSE' THEN '已退班'
            ELSE '未定义' END
            from tg_study_student t, tg_study_student_course_rel rel
            where t.id = rel.student_id
            and rel.course_id = :id
            [and rel.status =:status]
            [and t.name like '%:studentName%']
            order by t.remain_course, rel.status
        </sql>
    </sqlUnit>
    <!-- 学生已选的课时信息 -->
    <sqlUnit name="student_course_list">
        <sql>
            select t.id, t.name,
            CASE t.week_info WHEN '7' THEN '星期天'
            WHEN '1' THEN '星期一'
            WHEN '2' THEN '星期二'
            WHEN '3' THEN '星期三'
            WHEN '4' THEN '星期四'
            WHEN '5' THEN '星期五'
            WHEN '6' THEN '星期六'
            ELSE '未设置' END,
            t.course_time, t.classroom_name, t.teacher_name,
            CASE rel.status WHEN "NORMAL" THEN '正常'
            WHEN 'EXIT_COURSE' THEN '已退班'
            ELSE '未定义' END,
            t.create_time, t.description
            from tg_study_course t, tg_study_student_course_rel rel
            where rel.student_id =:id and rel.course_id = t.id
            [and rel.status =:status]
            [and rel.student_name like '%:studentName%']
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="select_study_class_rel_list">
        <sql>
            select t.id, t.student_name, t.class_name, t.teacher_name, t.status, t.create_time
            from tg_study_student_class_rel t
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="select_study_course_rel_list">
        <sql>
            select t.id,
            CASE t.course_week_info WHEN '7' THEN '星期天'
            WHEN '1' THEN '星期一'
            WHEN '2' THEN '星期二'
            WHEN '3' THEN '星期三'
            WHEN '4' THEN '星期四'
            WHEN '5' THEN '星期五'
            WHEN '6' THEN '星期六'
            ELSE '未设置' END, t.course_time, t.student_name,t.class_name, t.classroom_name, t.teacher_name, t.status, t.create_time
            from tg_study_student_course_rel t
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="course_record_list">
        <sql>
            select t.id, t.course_date, t.course_time, t.teacher_name, t.classroom_name,
            t.student_quantity_plan, t.student_quantity_actual, t.student_personal_leave, t.play_truant,
            t.student_other_absent, t.status, t.create_time, t.description
            from tg_study_course_record t
            order by t.create_time asc
        </sql>
    </sqlUnit>

    <sqlUnit name="select_study_course_student_record_list">
        <sql>
            select t.id, sr.student_name, t.course_date, t.course_time, t.class_name, t.classroom_name, t.teacher_name,
            CASE sr.status WHEN "NORMAL" THEN '正常'
            ELSE '未定义' END ,
            sr.description, sr.update_time
            from tg_study_course_record t, tg_study_course_student_record sr
            where t.id = sr.course_record_id
            order by t.create_time asc
        </sql>
    </sqlUnit>
    <!-- 每周课时简单列表 -->
    <sqlUnit name="courseRecord_simp_list">
        <sql>
            select t.id, concat(t.course_date, ' ', t.course_time), t.course_name,
            CASE t.status WHEN 'NORMAL' THEN '正常'
            WHEN 'NORMAL_END' THEN '已结课'
            ELSE '未定义' END
            from tg_study_course_record t
            where 1=1
            and YEARWEEK(DATE_FORMAT(t.course_date,'%Y-%m-%d')) = YEARWEEK(NOW())
            [and t.teacher_id =:teacherId]
            order by t.course_date
        </sql>
    </sqlUnit>
    <!-- 每周课时关联的学生列表 -->
    <sqlUnit name="courseRecord_student_list">
        <sql>
            select t.id, t.name, t.level, t.remain_course, t.create_time,
            CASE record.status WHEN 'NORMAL' THEN '正常'
            WHEN 'NORMAL_END' THEN '已结课'
            ELSE '未定义' END
            from tg_study_student t, tg_study_course_student_record record
            where t.id = record.student_id
            and record.course_record_id = :courseRecordId
            [and t.name like '%:studentName%']
            order by t.remain_course
        </sql>
    </sqlUnit>
    <!-- 系统通知 -->
    <sqlUnit name="system_message_list">
        <sql>
            select t.id,
            CASE t.message_type WHEN 'STUDENT_ABSENT_NOTE' THEN '连续缺课提醒'
            WHEN 'STUDENT_REMAIN_COURSE_NOTE' THEN '续费提醒'
            WHEN 'COURSE_UN_SIGNED_NOTE' THEN '课时未结课提醒'
            ELSE '未定义' END,
            t.message_content,
            CASE t.is_process WHEN 'NO' THEN '未处理'
            WHEN 'YES' THEN '已处理'
            ELSE '未定义' END,
            t.create_time, t.process_time, t.process_desc
            from tg_study_system_message t
            order by t.level desc, t.create_time desc
        </sql>
    </sqlUnit>


</sqlMap>